name: CI/CD Pipeline

#on:
  push:
    branches:
      - main
      - development
      - integration
      - staging
      - production
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image with Docker Buildx
      run: |
        docker buildx create --use
        docker buildx build --platform linux/amd64,linux/arm64 --tag your-dockerhub-username/my-nodejs-app:${{ github.sha }} --push .

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment: dev
    if: github.ref == 'refs/heads/development'

    steps:
    - name: Deploy to Development
      run: |
        echo "Deploying to Development Environment"
        docker pull your-dockerhub-username/my-nodejs-app:${{ github.sha }}
        docker run -d -p 3000:3000 your-dockerhub-username/my-nodejs-app:${{ github.sha }}

  deploy-integration:
    runs-on: ubuntu-latest
    needs: build
    environment: integration
    if: github.ref == 'refs/heads/integration'

    steps:
    - name: Deploy to Integration Environment
      run: |
        echo "Deploying to Integration Environment"
        docker pull your-dockerhub-username/my-nodejs-app:${{ github.sha }}
        docker run -d -p 3000:3000 your-dockerhub-username/my-nodejs-app:${{ github.sha }}

  deploy-uat:
    runs-on: ubuntu-latest
    needs: build
    environment: test/uat
    if: github.ref == 'refs/heads/staging'

    steps:
    - name: Deploy to Test/UAT Environment
      run: |
        echo "Deploying to UAT Environment"
        docker pull your-dockerhub-username/my-nodejs-app:${{ github.sha }}
        docker run -d -p 3000:3000 your-dockerhub-username/my-nodejs-app:${{ github.sha }}

  deploy-prod:
    runs-on: ubuntu-latest
    needs: build
    environment: prod
    if: github.ref == 'refs/heads/production'

    steps:
    - name: Deploy to Production
      run: |
        echo "Deploying to Production Environment"
        docker pull your-dockerhub-username/my-nodejs-app:${{ github.sha }}
        docker run -d -p 3000:3000 your-dockerhub-username/my-nodejs-app:${{ github.sha }}
